service: slack-bot

provider:
  name: aws
  runtime: python3.7
  stage: prod
  region: ap-northeast-1
  deploymentBucket: ${ssm:sls_deployment_bucket}
  logRetentionInDays: 7
  timeout: 60
  memorySize: 128
  environment:
    TZ: Asia/Tokyo
    SLACK_TOKEN: ${ssm:slack_bot_token}
    SLACK_USER_TOKEN: ${ssm:slack_bot_user_token}
    SLACK_CHANNEL: ${ssm:slack_bot_channel}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:BatchWriteItem
        - dynamodb:DescribeTable
      Resource: arn:aws:dynamodb:*:*:table/slack_emojies

functions:
  postNewChannels:
    handler: src/post_new_channels.lambda_handler
    events:
      - schedule:
          rate: cron(0 0,3,6,9,12,15,18,21 * * ? *)
  postNewEmojies:
    handler: src/post_new_emojies.lambda_handler
    events:
      - schedule:
          rate: cron(0 9 * * ? *)
  postTodaysAdage:
    handler: src/post_todays_adage.lambda_handler
    events:
      - schedule:
          rate: cron(0 12 * * ? *)

package:
  exclude:
    - .mypy_cache/**
    - .venv/**
    - .vscode/**
    - node_modules/**

plugins:
  - serverless-python-requirements
  - serverless-prune-plugin

custom:
  pythonRequirements:
    usePipenv: true

  prune:
    automatic: true
    number: 3

resources:
  Resources:
    SlackEmojies:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: slack_emojies
        AttributeDefinitions:
          - AttributeName: name
            AttributeType: S
        KeySchema:
          - AttributeName: name
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
